{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","name","setname","_useState3","_useState4","num","setnum","react_default","a","createElement","className","onClick","onChange","e","target","value","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"mMAgCeA,MA3Bf,WAAe,IAAAC,EAEWC,mBAAS,UAFpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAENK,EAFMH,EAAA,GAEAI,EAFAJ,EAAA,GAAAK,EAGSN,mBAAS,GAHlBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGNE,EAHMD,EAAA,GAGDE,EAHCF,EAAA,GAIb,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,mBAAWJ,GAEXE,EAAAC,EAAAC,cAAA,UAAQE,QAAS,WACfL,EAAOD,EAAM,KADf,KAGAE,EAAAC,EAAAC,cAAA,UAAQE,QAAS,WACfL,EAAOD,EAAM,KADf,KAIAE,EAAAC,EAAAC,cAAA,6BAAqBR,GACrBM,EAAAC,EAAAC,cAAA,SACEG,SAAU,SAAUC,GAClBX,EAAQW,EAAEC,OAAOC,YCZZC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAN,EAAA,GAAAO,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzB,EAAAC,EAAAC,cAACF,EAAAC,EAAMyB,WAAP,KACE1B,EAAAC,EAAAC,cAACyB,EAAD,QAOJlB","file":"static/js/main.0380c3eb.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport React from 'react';\n\n\nfunction App() {\n\n  const [name, setname] = useState('ashish');\n  const [num, setnum] = useState(0);\n  return (\n    <div className=\"App\">\n      <h1>Counter</h1>\n      <h2>Count-{num}</h2>\n\n      <button onClick={() => {\n        setnum(num + 1);\n      }}>+</button>\n      <button onClick={() => {\n        setnum(num - 1);\n      }}>-</button>\n\n      <h2>Type your name: {name}</h2>\n      <input\n        onChange={function (e) {\n          setname(e.target.value);\n        }}\n      />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}